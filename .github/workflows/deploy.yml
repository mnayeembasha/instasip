name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      #  Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      #  Setup Node.js (matches Lambda runtime)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      #  Install dependencies in server folder
      - name: Install dependencies
        working-directory: ./server
        run: npm ci

      #  Build TypeScript project
      - name: Build project
        working-directory: ./server
        run: npm run build

      #  Prepare deployment zip (dist + node_modules at root)
      - name: Zip deployment package
        working-directory: ./server
        run: |
          rm -f ../function.zip
          mkdir -p deploy_temp
          cp -r dist/* deploy_temp/
          cp -r node_modules deploy_temp/
          cd deploy_temp
          zip -r ../../function.zip .
          cd ..
          rm -rf deploy_temp

      # Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: instasip-server
          handler: "lambda.lambdaHandler"
          zip_file: function.zip
          publish: true

      #  Deploy HTTP API Gateway (apigatewayv2)
      - name: Deploy HTTP API Gateway stage
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying HTTP API Gateway stage..."
          aws apigatewayv2 create-deployment \
            --api-id qs1ohhx6q9 \
            --stage-name prod \
            --region $AWS_REGION
          echo " HTTP API Gateway redeployed successfully!"
